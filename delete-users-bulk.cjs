const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// ATEN√á√ÉO: Voc√™ precisa da SERVICE ROLE KEY para deletar usu√°rios
// Substitua pela sua service role key (encontre em Settings > API)
const SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY || process.env.VITE_SUPABASE_ANON_KEY;

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  SUPABASE_SERVICE_KEY
);

async function deleteAllUsers() {
  console.log('üóëÔ∏è SCRIPT DE DELE√á√ÉO EM MASSA DE USU√ÅRIOS');
  console.log('='.repeat(60));
  
  try {
    // 1. Listar todos os usu√°rios primeiro
    console.log('\n1. LISTANDO USU√ÅRIOS EXISTENTES:');
    console.log('-'.repeat(40));
    
    const { data: users, error: listError } = await supabase.auth.admin.listUsers();
    
    if (listError) {
      console.error('‚ùå Erro ao listar usu√°rios:', listError.message);
      console.log('\nüí° DICA: Voc√™ precisa da SERVICE ROLE KEY para usar esta fun√ß√£o.');
      console.log('üìç Encontre em: Supabase Dashboard > Settings > API > service_role key');
      return;
    }
    
    console.log(`üìä Total de usu√°rios encontrados: ${users.users.length}`);
    
    if (users.users.length === 0) {
      console.log('‚úÖ Nenhum usu√°rio para deletar!');
      return;
    }
    
    // Mostrar alguns usu√°rios
    console.log('\nüë• Primeiros usu√°rios:');
    users.users.slice(0, 5).forEach((user, i) => {
      console.log(`  ${i + 1}. ${user.email} (${user.id})`);
    });
    
    if (users.users.length > 5) {
      console.log(`  ... e mais ${users.users.length - 5} usu√°rios`);
    }
    
    // 2. ATEN√á√ÉO: Descomente a se√ß√£o abaixo para realmente deletar
    console.log('\n‚ö†Ô∏è ATEN√á√ÉO: Para deletar os usu√°rios, descomente o c√≥digo abaixo!');
    console.log('='.repeat(60));
    
    /*
    // DESCOMENTE ESTE BLOCO PARA DELETAR DE VERDADE:
    
    console.log('\n2. DELETANDO USU√ÅRIOS:');
    console.log('-'.repeat(40));
    
    let deletedCount = 0;
    let errorCount = 0;
    
    for (const user of users.users) {
      try {
        const { error: deleteError } = await supabase.auth.admin.deleteUser(user.id);
        
        if (deleteError) {
          console.log(`‚ùå Erro ao deletar ${user.email}: ${deleteError.message}`);
          errorCount++;
        } else {
          console.log(`‚úÖ Deletado: ${user.email}`);
          deletedCount++;
        }
        
        // Pequena pausa entre deletions para n√£o sobrecarregar
        await new Promise(resolve => setTimeout(resolve, 100));
        
      } catch (e) {
        console.log(`‚ùå Erro ao deletar ${user.email}: ${e.message}`);
        errorCount++;
      }
    }
    
    console.log('\nüìä RESULTADO:');
    console.log(`‚úÖ Usu√°rios deletados: ${deletedCount}`);
    console.log(`‚ùå Erros: ${errorCount}`);
    */
    
  } catch (err) {
    console.error('‚ùå Erro geral:', err.message);
  }
}

// Fun√ß√£o para deletar usu√°rios com filtro
async function deleteUsersByFilter() {
  console.log('\nüîç DELETAR USU√ÅRIOS COM FILTRO (exemplo):');
  console.log('-'.repeat(40));
  
  try {
    const { data: users, error } = await supabase.auth.admin.listUsers();
    
    if (error) {
      console.error('‚ùå Erro:', error.message);
      return;
    }
    
    // Exemplo: deletar usu√°rios com email que cont√©m "test"
    const testUsers = users.users.filter(user => 
      user.email && user.email.includes('test')
    );
    
    console.log(`üìä Usu√°rios com "test" no email: ${testUsers.length}`);
    
    if (testUsers.length > 0) {
      console.log('üë• Usu√°rios que seriam deletados:');
      testUsers.forEach(user => {
        console.log(`  - ${user.email}`);
      });
    }
    
    // Para deletar, descomente:
    /*
    for (const user of testUsers) {
      const { error: deleteError } = await supabase.auth.admin.deleteUser(user.id);
      if (!deleteError) {
        console.log(`‚úÖ Deletado: ${user.email}`);
      }
    }
    */
    
  } catch (err) {
    console.error('‚ùå Erro:', err.message);
  }
}

console.log('üö® SCRIPT DE DELE√á√ÉO EM MASSA DE USU√ÅRIOS AUTH');
console.log('‚ö†Ô∏è  CUIDADO: Este script pode deletar TODOS os usu√°rios!');
console.log('üìù Leia o c√≥digo antes de executar!');
console.log('');

// Executar apenas listagem por seguran√ßa
deleteAllUsers();

// Descomente para ver filtro de exemplo:
// deleteUsersByFilter();