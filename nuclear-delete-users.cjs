const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// INSTRU√á√ïES:
// 1. V√° para Supabase Dashboard > Settings > API
// 2. Copie a "service_role" key (n√£o a anon key!)
// 3. Substitua abaixo ou adicione ao .env como SUPABASE_SERVICE_ROLE_KEY

const SERVICE_KEY = 'SUA_SERVICE_ROLE_KEY_AQUI'; // Substitua pela service role key

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  SERVICE_KEY // Usando service role key para opera√ß√µes admin
);

async function nuclearDeleteAllUsers() {
  console.log('üí• DELE√á√ÉO NUCLEAR DE USU√ÅRIOS - √öLTIMA TENTATIVA');
  console.log('='.repeat(60));
  console.log('‚ö†Ô∏è  ISSO VAI DELETAR TODOS OS USU√ÅRIOS DE AUTH!');
  console.log('üî• Use apenas se n√£o conseguir usar a interface');
  console.log('');

  try {
    // 1. Via Admin API (precisa de service role key)
    console.log('üîë Tentativa 1: Via Admin API...');
    
    const { data: users, error: listError } = await supabase.auth.admin.listUsers();
    
    if (!listError && users && users.users.length > 0) {
      console.log(`üìä ${users.users.length} usu√°rios encontrados`);
      
      // Descomente as linhas abaixo para REALMENTE deletar:
      /*
      console.log('üóëÔ∏è Deletando usu√°rios...');
      for (const user of users.users) {
        const { error } = await supabase.auth.admin.deleteUser(user.id);
        if (error) {
          console.log(`‚ùå Erro ao deletar ${user.email}: ${error.message}`);
        } else {
          console.log(`‚úÖ Deletado: ${user.email}`);
        }
      }
      */
      
      console.log('‚ö†Ô∏è Para executar a dele√ß√£o, descomente o bloco acima');
      return;
    }

    // 2. Via SQL direto (fallback)
    console.log('üîë Tentativa 2: Via SQL direto...');
    console.log('Execute este comando no SQL Editor do Supabase:');
    console.log('');
    console.log('DELETE FROM auth.users;');
    console.log('');

  } catch (err) {
    console.error('‚ùå Erro:', err.message);
    console.log('');
    console.log('üí° SOLU√á√ïES:');
    console.log('1. Substitua SERVICE_KEY pela sua service_role key');
    console.log('2. Ou use SQL direto: DELETE FROM auth.users;');
  }
}

// ALTERNATIVA: Via SQL puro (n√£o precisa de service role key)
function showSQLAlternative() {
  console.log('');
  console.log('üõ†Ô∏è ALTERNATIVA: COMANDOS SQL PUROS');
  console.log('='.repeat(50));
  console.log('Execute estes comandos no Supabase SQL Editor:');
  console.log('');
  console.log('-- Ver usu√°rios existentes');
  console.log('SELECT COUNT(*) FROM auth.users;');
  console.log('');
  console.log('-- DELETAR TODOS OS USU√ÅRIOS (CUIDADO!)');
  console.log('DELETE FROM auth.users;');
  console.log('');
  console.log('-- Verificar se funcionou');
  console.log('SELECT COUNT(*) FROM auth.users;');
  console.log('');
  console.log('-- Reset de sequences (opcional)');
  console.log('SELECT setval(pg_get_serial_sequence(\'auth.users\', \'id\'), 1, false);');
  console.log('');
  console.log('üîÑ Depois disso, fa√ßa F5 na p√°gina Auth > Users');
}

console.log('üöÄ Escolha uma op√ß√£o:');
console.log('1. Configurar service role key e usar API');
console.log('2. Usar comandos SQL diretos');
console.log('');

if (SERVICE_KEY && SERVICE_KEY !== 'SUA_SERVICE_ROLE_KEY_AQUI') {
  nuclearDeleteAllUsers();
} else {
  console.log('‚ö†Ô∏è Configure a SERVICE_KEY primeiro ou use a alternativa SQL:');
  showSQLAlternative();
}