console.log('üîß Corre√ß√£o completa para RLS do onboarding');
console.log('');
console.log('üìã Execute este SQL no Supabase para resolver todos os problemas de RLS:');
console.log('');
console.log('-- 1. Corrigir RLS para user_roles');
console.log('DROP POLICY IF EXISTS "Users can create initial visitor role" ON public.user_roles;');
console.log('DROP POLICY IF EXISTS "Users can create their initial role" ON public.user_roles;');
console.log('DROP POLICY IF EXISTS "Users can update their own roles" ON public.user_roles;');
console.log('');
console.log('CREATE POLICY "Users can create their initial role"');
console.log('ON public.user_roles');
console.log('FOR INSERT');
console.log('WITH CHECK (');
console.log('  auth.uid() = user_id');
console.log('  AND role IN (\'visitante\', \'proprietaria\')');
console.log('  AND NOT EXISTS (');
console.log('    SELECT 1 FROM public.user_roles');
console.log('    WHERE user_id = auth.uid()');
console.log('  )');
console.log(');');
console.log('');
console.log('CREATE POLICY "Users can update their own roles"');
console.log('ON public.user_roles');
console.log('FOR UPDATE');
console.log('USING (auth.uid() = user_id)');
console.log('WITH CHECK (auth.uid() = user_id);');
console.log('');
console.log('-- 2. Corrigir RLS para clinicas (permitir onboarding)');
console.log('DROP POLICY IF EXISTS "Users can create clinics" ON public.clinicas;');
console.log('DROP POLICY IF EXISTS "Users can view accessible clinics" ON public.clinicas;');
console.log('');
console.log('-- Pol√≠tica mais permissiva para onboarding');
console.log('CREATE POLICY "Users can create their first clinic"');
console.log('ON public.clinicas');
console.log('FOR INSERT');
console.log('WITH CHECK (');
console.log('  -- Usu√°rio deve ter role proprietaria');
console.log('  EXISTS (');
console.log('    SELECT 1 FROM public.user_roles');
console.log('    WHERE user_id = auth.uid()');
console.log('    AND role = \'proprietaria\'');
console.log('    AND ativo = true');
console.log('  )');
console.log('  -- E n√£o deve ter nenhuma cl√≠nica ainda (primeira cl√≠nica)');
console.log('  AND NOT EXISTS (');
console.log('    SELECT 1 FROM public.user_roles ur2');
console.log('    WHERE ur2.user_id = auth.uid()');
console.log('    AND ur2.clinica_id IS NOT NULL');
console.log('  )');
console.log(');');
console.log('');
console.log('-- Pol√≠tica para visualizar cl√≠nicas');
console.log('CREATE POLICY "Users can view their clinics"');
console.log('ON public.clinicas');
console.log('FOR SELECT');
console.log('USING (');
console.log('  EXISTS (');
console.log('    SELECT 1 FROM public.user_roles');
console.log('    WHERE user_id = auth.uid()');
console.log('    AND (clinica_id = public.clinicas.id OR role IN (\'proprietaria\', \'super_admin\'))');
console.log('    AND ativo = true');
console.log('  )');
console.log(');');
console.log('');
console.log('-- 3. Verificar se RLS est√° habilitado');
console.log('ALTER TABLE public.user_roles ENABLE ROW LEVEL SECURITY;');
console.log('ALTER TABLE public.clinicas ENABLE ROW LEVEL SECURITY;');
console.log('');
console.log('üîó Acesse: https://supabase.com/dashboard/project/dvnyfwpphuuujhodqkko/sql');
console.log('');
console.log('‚ö†Ô∏è  IMPORTANTE: Execute todo o SQL de uma vez para evitar problemas de depend√™ncia!');